datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  password String
  email    String?
  status   Int     @default(0) // 0 未激活，1 正常，2 封禁

  roles      Role[]
  books      Book[]
  tags       Tag[]
  MailRecord MailRecord[]

  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deletedAt DateTime?
}

model Role {
  id   Int    @id @default(autoincrement())
  code String @unique
  name String

  parent     Role         @relation("RoleToRole", fields: [roleId], references: [id])
  Role       Role[]       @relation("RoleToRole")
  roleId     Int
  User       User?        @relation(fields: [userId], references: [id])
  userId     Int?
  permission Permission[]

  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deletedAt DateTime?
}

model Permission {
  id   Int    @id @default(autoincrement())
  code String @unique
  name String

  Role   Role? @relation(fields: [roleId], references: [id])
  roleId Int?

  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deletedAt DateTime?
}

model Book {
  id     Int     @id @default(autoincrement())
  name   String
  author String
  intro  String?
  status Int     @default(0) // 1 wanted, 2 reading, 3 read

  tags    Tag[]
  owner   User  @relation(fields: [ownerId], references: [id])
  ownerId Int

  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deletedAt DateTime?

  @@index([name, author])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  books   Book[]
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId Int

  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deletedAt DateTime?
}

model MailRecord {
  id      Int     @id @default(autoincrement())
  from    String
  to      String
  type    Int     @default(0) // 0 推广, 1 验证码
  subject String?
  code    String?

  receiver   User @relation(fields: [receiverId], references: [id])
  receiverId Int

  expirationAt DateTime?
  createdAt    DateTime  @default(now())
  updateAt     DateTime  @updatedAt
  deletedAt    DateTime?
}
